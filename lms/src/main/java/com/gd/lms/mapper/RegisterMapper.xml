<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.RegisterMapper">



	<!-- 1.수강신청 -->
	
	<!--  1-0. 담긴 과목이 있다면 담긴 과목 리스트 불러오기 -->
	<select id="selectMyRegisterCart" resultType="map" parameterType="int">
	SELECT
		rc.subject_approve_no
		, sa.major_no
		, sa.subject_no
		, sa.professor_no
		, sa.day
		, sa.start_time
		, sa.end_time
		, s.subject_name
		, s.subject_major
		, pf.professor_name
	FROM
	register_cart rc
		RIGHT JOIN
		subject_approve sa
		ON
		rc.subject_approve_no = sa.subject_approve_no
			RIGHT JOIN
			subject s
			ON
			sa.subject_no = s.subject_no
				RIGHT JOIN
				professor pf
				ON
				sa.professor_no = pf.professor_no 
				WHERE
				rc.student_no = #{studentNo}		
	</select>
	
	
	
	<!--  1-1. 수강신청할 때 승인과목 리스트 불러오기
		: SubjectApproveMapper 에 selectSubjectApproveList 라는 이름으로 있음 -->
	
	<select id="selectRegisterListByCredit" resultType="map" parameterType="map">
	SELECT
		subject_approve_no
		, major_no
		, subject_no
		, professor_no
		FROM 
			sa.subject_approve
		WHERE	
			s.subject_credit =#{subjectCredit}
	</select>


	<!--  1-2. 장바구니(registerCart)에 담기 -->
	<insert id="insertRegisterCart" parameterType="com.gd.lms.vo.RegisterCart">
	INSERT INTO
		register_cart
		(
		student_no
		, subject_approve_no
		, create_date
		
		)
		VALUES
		(
		#{studentNo}
		, #{subjectApproveNo}
		, now()
		
		)
	</insert>
	
	
	<!-- 1-25. 중복 확인 -->
	<select id="selectCheckRegisterCart" parameterType="com.gd.lms.vo.RegisterCart" resultType="int">
		SELECT
		count(student_no) count
		FROM
		register_cart
		where
		student_no = #{studentNo}
		AND
		subject_approve_no = #{subjectApproveNo}
	</select>
	

	<!--  1-3. 장바구니(registerCart)에 담긴 내용 수정 -->
	<update id="updateRegisterCart" parameterType="int" > 
	UPDATE
		register_cart
	SET
		subject_approve_no = ${studentApproveNo}
		, update_date	= now()
	WHERE
		student_no = ${No}	
	</update>


	<!-- 1-4. 장바구니(registerCart)에 담긴 내용 삭제-일부만  -->
	<delete id="deleteRegisterCart" parameterType="com.gd.lms.vo.RegisterCart">
	DELETE	
		FROM
		register_cart
		WHERE
		student_no = ${studentNo}
		AND
		subject_approve_no = ${subjectApproveNo}
	</delete>



	<!--  1-5. 수강신청 완료 >> register에 최종 제출 & >>> 이때 장바구니 삭제(1-45) -->
	<insert id="insertRegister" parameterType="com.gd.lms.vo.RegisterCart" useGeneratedKeys="true" keyProperty="registerNo">					
	INSERT INTO register(student_no, subject_approve_no, create_date)
		    SELECT register_cart.student_no, register_cart.subject_approve_no, register_cart.create_date
		        FROM register_cart
				  	WHERE student_no = #{studentNo} AND subject_approve_no=#{subjectApproveNo};
	</insert>


	<!-- 1-55 선택된것만 보내기 -->
	


	

	<!--  학생의 수강신청한 강의 리스트 불러오기... 이지만 어지간한건 다 선택함-->
	<select id="selectStudentMyRegisterList" parameterType="int" resultType="map">
	SELECT 
		r.student_no studentNo
		, r.subject_approve_no subjectApproveNo
		, r.create_date createDateR
		, sa.major_no majorNo
		, sa.professor_no professorNo
		, sa.year yearSa
		, sa.semester semester
		, sa.start_date startDate
		, sa.end_date endDate
		, sa.total_date totalDate
		, sa.subject_room subjectRoom
		, sa.day daySa
		, sa.start_time startTime
		, sa.end_time eneTime
		, s.subject_no subjectNo
		, s.subject_name subjectName		
		, m.major_name majorName
		, s.subject_credit		subjectCredit
		, s.subject_major		subjectMajor
	FROM 
		register r
	INNER JOIN
		subject_approve sa
	ON
		r.subject_approve_no	= 	sa.subject_approve_no
	INNER JOIN
		subject s
	ON
		sa.subject_no = s.subject_no
	INNER JOIN
		major m
	ON
		sa.major_no = m.major_no
	WHERE
		r.student_no = #{No}		
	</select>




	<!--  넘겨받은 approveNo 기준으로 강의정보 셀렉하기 >>> 학생 교수 상관없이 -->
	<select id="selectRegisteInfo" resultType="map">
	SELECT
		sa.subject_approve_no subjectApproveNo
		, sa.major_no majorNo
		, sa.subject_no subjectNo
		, sa.professor_no professorNo
		, sa.year yearS
		, sa.semester semester
		, sa.start_date startDate
		, sa.end_date endDate
		, sa.total_date totalDate
		, sa.approve_active approveActive
		, sa.subject_room subjectRoom
		, sa.day day
		, sa.start_time startTime
		, sa.end_time endTime
		, s.subject_name subjectName
		, s.subject_state subjectState
		, s.subject_credit subjectCredit
		, s.subject_major subjectMajor
		, p.professor_name
		, p.professor_room
		, p.professor_state
		, m.major_name majorName
	FROM
		subject_approve sa
		INNER JOIN
			subject s
		ON
			sa.subject_no = s.subject_no
			INNER JOIN
				professor p
				ON
					sa.professor_no = p.professor_no
					INNER JOIN
						major m
							ON	
								sa.major_no = m.major_no
								WHERE
									sa.subject_approve_no = #{subjectApproveNo}
	</select>
	




	
	<!-- 교수의 강의리스트 불러오기 -->
		<select id="selectProfessorMyRegisterList" parameterType="int" resultType="map">
		SELECT 
		sa.major_no majorNo
		, sa.subject_approve_no subjectApproveNo
		, sa.professor_no professorNo
		, sa.year yearSa
		, sa.semester semester
		, sa.start_date startDate
		, sa.end_date endDate
		, sa.total_date totalDate
		, sa.subject_room subjectRoom
		, sa.day daySa
		, sa.start_time startTime
		, sa.end_time eneTime
		, s.subject_name subjectName
		, s.subject_no subjectNo
		, m.major_name majorName
		FROM
			subject_approve sa
		INNER JOIN
			subject s	
		ON
			sa.subject_no	= 	s.subject_no
		INNER JOIN
			major m
		ON
			sa.major_no = m.major_no
		WHERE
			sa.professor_no = #{No} AND sa.approve_active = 'Y';		
		</select>	
			
			
		<!-- 교수 출석체크를 위한 학생리스트 -->	
		<select id="selectRegisterStudentList" parameterType="int" resultType="map">
			SELECT
				  a.attendance_no		attendanceNo
				, r.student_no			studentNo
				, s.student_name		studentName
				, a.attendance_date		attendanceDate
				, a.attendance_state	attendanceState
				, r.subject_approve_no	subejctApproveNo
				, s.major_no			majorNo
				, m.major_name			majorName
				, a.attendance_etc		attendanceEtc
			FROM
				register r
			INNER JOIN
				student s
			ON
				r.student_no = s.student_no
			INNER JOIN
				major m
			ON
				s.major_no = m.major_no
			INNER JOIN
				attendance a
			ON
				a.student_no = r.student_no
			WHERE
				r.subject_approve_no = #{subjectApproveNo}
		</select>	
</mapper>