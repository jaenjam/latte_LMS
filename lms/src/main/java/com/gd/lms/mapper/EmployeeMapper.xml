<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.EmployeeMapper">
	
	<!-- 관리자 수 -->
	<select id="selectEmployeeCount" resultType="int">
		SELECT
			count(*)
		FROM
			employee
	</select>

	<!-- 관리자사진 유무확인 -->
	<select id="selectEmployeeImg" parameterType="int" resultType="map">
		SELECT
			  employee_no		employeeNo
			, content_type		contentType
			, filename
			, origin_filename	originFilename
		FROM
			employee_img
		WHERE
			employee_no = #{employeeNo}
	</select>

	<!-- 재직상태 : 관리자 리스트 -->
	<select id="EmployeeStatus" resultType="map">
		SELECT
			  employee_no 		employeeNo
			, employee_name 	employeeName
			, employee_active	employeeActive
			, employee_state 	employeeState
		
		FROM employee
		
		WHERE employee_no
	</select>


	<!-- 연봉관리 : 서브관리자 리스트 -->
	<select id="subEmployeeSalaryList" resultType="map">
		SELECT
			  e.employee_no 	employeeNo
			, e.employee_name	employeeName
			, e.employee_active employeeActive
			, s.salary_no 		salaryNo
			, s.salary_value 	salaryValue
			
		FROM employee e LEFT JOIN salary s
		
		ON e.salary_no = s.salary_no
		
		WHERE employee_active = '서브관리자'
		
		ORDER BY employee_no
	</select>
	
	
	<!-- 연봉관리 : 관리자 리스트 -->
	<select id="employeeSalaryList" resultType="map">
		SELECT
			  e.employee_no 	employeeNo
			, e.employee_name	employeeName
			, e.employee_active employeeActive
			, s.salary_no 		salaryNo
			, s.salary_value 	salaryValue
			
		FROM employee e LEFT JOIN salary s
		
		ON e.salary_no = s.salary_no
		
		WHERE employee_active = '총관리자'
		
		ORDER BY employee_no
	</select>


	<!-- 상세관리 : 서브관리자 리스트 -->
	<select id="subEmployeeList" resultType="map">
		SELECT
			  e.employee_no 				employeeNo
			, e.employee_pass 				employeePass
			, e.employee_name 				employeeName
			, e.employee_regi_no 			employeeRegiNo
			, e.employee_age 				employeeAge
			, e.employee_gender 			employeeGender
			, e.employee_telephone 			employeeTelephone
			, e.employee_email 				employeeEmail
			, e.employee_address 			employeeAddress
			, e.employee_detail_address 	employeeDetailAddress
			, e.employee_state 				employeeState
			, e.employee_active 			employeeActive
			, e.employee_account			employeeAccount
			, e.create_date 				createDate
			, e.update_date 				updateDate
			, e.salary_no 					salaryNo
			, s.salary_value				salaryValue
				
		FROM employee e LEFT JOIN salary s
		
		ON e.salary_no = s.salary_no
		
		WHERE employee_active = '서브관리자'
		
		ORDER BY employee_no
	</select>

	<!-- 관리자 회원가입 -->
	<insert id="insertEmployee"
		parameterType="com.gd.lms.vo.Employee">
		INSERT INTO employee
		(
		employee_no,
		employee_pass,
		employee_name,
		employee_regi_no,
		employee_age,
		employee_gender,
		employee_telephone,
		employee_email,
		employee_address,
		employee_detail_address,
		create_date,
		update_date
		)
		VALUES
		(
		#{employeeNo},
		PASSWORD(#{employeePass}),
		#{employeeName},
		#{employeeRegiNo},
		#{employeeAge},
		#{employeeGender},
		#{employeeTelephone},
		#{employeeEmail},
		#{employeeAddress},
		#{employeeDetailAddress},

		NOW(),
		NOW()
		)
	</insert>
	
	<!--  사번중복검사용 -->
	<select id="employeeNoCheck" resultType="int">
		SELECT
			count(*) 
		FROM 
			employee
		WHERE 
			employee_no =#{employeeNo}	
	</select>
	
	
	
	

	<!-- 관리자 로그인 -->
	<select id="getEmployee" resultType="com.gd.lms.vo.Employee"
		parameterType="com.gd.lms.vo.Employee">
		SELECT
		employee_no employeeNo
		, employee_pass employeePass
		, employee_name employeeName
		, employee_regi_no employeeRegiNo
		,
		employee_age employeeAge
		, employee_gender employeeGender
		,
		employee_telephone employeeTelephone
		, employee_email employeeEmail
		,
		employee_address employeeAddress
		, employee_detail_address
		employeeDetailAddress
		, employee_state employeeState
		, employee_active
		employeeActive
		, employee_account employeeAccount
		, salary_no salaryNo
		FROM
		employee
		WHERE
		employee_no =
		#{employeeNo}

		AND
		employee_pass = PASSWORD(#{employeePass})
	</select>

	<!-- 관리자 목록 -->
	<select id="selectEmployeeList" resultType="map">

		SELECT
		employee_no
		employeeNo
		,employee_pass employeePass
		,employee_name
		employeeName
		,employee_regi_no employeeRegiNo
		,employee_age employeeAge
		,employee_gender employeeGender
		,employee_telephone employeeTelephone
		,employee_email employeeEmail
		,employee_address employeeAddress
		,employee_detail_address employeeDetailAddress
		,employee_state
		employeeState
		,employee_active employeeActive
		,employee_account employeeAccount
		,salary_no salaryNo
		,create_date createDate
		,update_date updateDate

		FROM
		employee

	</select>

	<!-- 관리자 정보 상세보기 -->
	<select id="selectEmployeeOne" parameterType="int"
		resultType="Map">

		SELECT
		e.employee_no employeeNo
		,e.employee_pass employeePass
		,e.employee_name employeeName
		,e.employee_regi_no employeeRegiNo
		,e.employee_age employeeAge
		,e.employee_gender employeeGender
		,e.employee_telephone
		employeeTelephone
		,e.employee_email employeeEmail
		,e.employee_address
		employeeAddress
		,e.employee_detail_address
		employeeDetailAddress
		,e.employee_state employeeState
		,e.employee_active employeeActive
		,e.employee_account employeeAccount
		,s.salary_no salaryNo
		,ei.filename
		fileName

		FROM employee e LEFT JOIN salary s
		ON e.salary_no = s.salary_no
		LEFT JOIN
		employee_img ei
		ON e.employee_no = ei.employee_no
		WHERE
		e.employee_no =
		#{employeeNo}

	</select>

	<!-- 관리자 정보수정 전 비밀번호확인 -->
	<select id="selectEmployeeOneAfterPass"
		parameterType="com.gd.lms.vo.Employee" resultType="map">
		SELECT
		e.employee_no
		employeeNo
		,e.employee_pass employeePass
		,e.employee_name employeeName
		,e.employee_regi_no employeeRegiNo
		,e.employee_age employeeAge
		,e.employee_gender employeeGender
		,e.employee_telephone
		employeeTelephone
		,e.employee_email employeeEmail
		,e.employee_address
		employeeAddress
		,e.employee_detail_address employeeDetailAddress
		,e.employee_state employeeState
		,e.employee_active employeeActive
		,e.employee_account employeeAccount
		,s.salary_no salaryNo
		,ei.filename fileName

		FROM
		employee e LEFT JOIN
		salary s
		ON
		e.salary_no = s.salary_no
		LEFT JOIN
		employee_img ei
		ON
		e.employee_no = ei.employee_no
		WHERE
		e.employee_no=#{employeeNo}
		AND
		e.employee_pass=#{employeePass}
	</select>

	<!-- 관리자 정보수정하기 -->
	<update id="updateEmployee"
		parameterType="com.gd.lms.vo.Employee">

		UPDATE
			employee
		SET
			  employee_name 			= #{employeeName}
			, employee_telephone 		= #{employeeTelephone}
			, employee_email 			= #{employeeEmail}
			, employee_address		 	= #{employeeAddress}
			, employee_detail_address 	= #{employeeDetailAddress}

		WHERE employee_no = #{employeeNo}

	</update>

	<!-- 관리자 정보수정 사진등록 -->
	<insert id="insertEmployeeImg" parameterType="com.gd.lms.vo.EmployeeImg">

		INSERT INTO employee_img 
			(
				  employee_no
				, filename
				, origin_filename
				, content_type
				, create_date
				, update_date
			)
		VALUES
			(
				  #{employeeNo}
				, #{filename}
				, #{originFilename}
				, #{contentType}
				, now()
				, now()
			)
	</insert>

	<!-- 직원사진수정하기 -->
	<update id="updateEmployeeImg" parameterType="com.gd.lms.vo.EmployeeImg">
	
		UPDATE 
				employee_img
		SET
				  employee_no = #{employeeNo}
				, content_type = #{contentType}
				, filename = #{filename}
				, origin_filename = #{originFilename}
				, update_date = now()
		WHERE
				employee_no = #{employeeNo}
	
	</update>

</mapper>