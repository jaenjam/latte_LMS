<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.ProfessorMapper">


	<!-- 재직상태 : 교수 리스트 -->
	<select id="professorStatusList" resultType="map">
		SELECT
			  p.professor_no	professorNo
			, p.major_no		majorNo
			, m.major_name		majorName
			, p.professor_name	professorName
			, p.professor_state	professorState
		
		FROM	professor p
			
			INNER JOIN major m
			ON p.major_no = m.major_no
		
		ORDER BY p.professor_no
	</select>
	

	<!-- 연봉관리 : 교수 리스트 -->
	<select id="professorSalaryList" resultType="map">
		SELECT
			  p.professor_no 		professorNo
			, p.major_no			majorNo
			, m.major_name			majorName
			, p.professor_name 		professorName
			, s.salary_no 			salaryNo
			, s.salary_value 		salaryValue
			
		FROM professor p 
			
			INNER JOIN salary s
			ON p.salary_no = s.salary_no
			
			INNER JOIN major m
			ON p.major_no = m.major_no
		
		ORDER BY professor_no
	</select>

	<!-- 교수 로그인 (세션 값으로 저장할거라 다 선언해주기)-->
	<select id="professerLogin" resultType="com.gd.lms.vo.Professor">
		SELECT
			professor_no professorNo
			, professor_pass professorPass
			, major_no majorNo
			, professor_name professorName
			, professor_age professorAge
			, professor_gender professorGender
			, professor_regi_no professorRegiNo
			, professor_telephone professorTelephone
			, professor_email professorEmail
			, professor_address professorAddress
			, professor_detail_address professorDetailAddress
			, professor_room professorRoom
			, professor_state professorState
			, salary_no salaryNo
		FROM
			professor
		WHERE
			professor_no = #{professorNo}
		AND	
			professor_pass = #{professorPass}	
	</select>
	
	<!-- 교수회원가입 -->
	<insert id="insertProfessor" parameterType="com.gd.lms.vo.Professor">
	INSERT INTO professor (
		  professor_no
		, professor_pass
		, major_no
		, professor_name
		, professor_regi_no
		, professor_age
		, professor_gender
		, professor_telephone
		, professor_email
		, professor_address
		, professor_detail_address
		, create_date
		, update_date)
	VALUES (
		  #{professorNo}
		, #{professorPass}
		, #{majorNo}
		, #{professorName}
		, #{professorRegiNo}
		, #{professorAge}
		, #{professorGender}
		, #{professorTelephone}
		, #{professorEmail}
		, #{professorAddress}
		, #{professorDetailAddress}
		, NOW()
		, NOW())
	</insert>
	
	<!--  사번중복검사용 -->
	<select id="professorNoCheck" resultType="int">
		SELECT
			count(*) 
		FROM 
			professor
		WHERE 
			professor_no =#{professorNo}	
	</select>
	
	
	<!-- 교수상세보기 -->
	<select id="selectProfessorOne" parameterType="int" resultType="map">
		SELECT
			  p.professor_no professorNo
			, p.professor_pass professorPass
			, p.major_no majorNo
			, m.major_name majorName
			, p.professor_name professorName
			, p.professor_regi_no professorRegiNo
			, p.professor_age professorAge
			, p.professor_gender professorGender
			, p.professor_telephone professorTelephone
			, p.professor_email professorEmail
			, p.professor_address professorAddress
			, p.professor_detail_address professorDetailAddress
			, p.professor_room professorRoom
			, p.professor_state professorState
			, p.create_date createDate
			, p.update_date updateDate
			, i.content_type contentType
			, i.filename filename
			, i.origin_filename originFilename
			, s.salary_no salaryNo
			, s.salary_value salaryValue
		FROM
			professor p LEFT JOIN professor_img i
		ON
			p.professor_no = p.professor_no
		INNER JOIN salary s	
		ON 
			p.salary_no = s.salary_no
		LEFT JOIN major m
		ON
			p.major_no = m.major_no
		WHERE 
			p.professor_no = #{professorNo}
	</select>
	
	<!-- 교수정보수정하기 -->
	<update id="updateProfessor" parameterType="com.gd.lms.vo.Professor">
		
		UPDATE 
			professor
		SET
			 professor_no=#{professorNo}
			,major_no=#{majorNo}
			,professor_name=#{professorName}
			,professor_age=#{professorAge}
			,professor_gender=#{professorGender}
			,professor_telephone=#{professorTelephone}
			,professor_email=#{professorEmail}
			,professor_address=#{professorAddress}
			,professor_detail_address=#{professorDetailAddress}
		WHERE
			professor_no = #{professorNo}

	</update>
	
	<!-- 교수목록 -->
	<select id="selectProfessorList" resultType="map">
	SELECT
		 p.professor_no professorNo
		,m.major_no majorNo
		,m.major_name majorName
		,p.professor_name professorName
		,p.professor_regi_no professorRegiNo
		,p.professor_age professorAge
		,p.professor_gender professorGender
		,p.professor_telephone professorTelephone
		,p.professor_email professorEmail
		,p.professor_address professorAddress
		,p.professor_detail_address professorDetailAddress
		,p.professor_room professorRoom
		,p.professor_state professorState
		,p.create_date createDate
		,p.update_date updateDate
		,s.salary_no salaryNo
		,s.salary_value salaryValue
	FROM
		professor p LEFT JOIN major m
	ON
		p.major_no = m.major_no
	INNER JOIN salary s	
		ON 
			p.salary_no = s.salary_no
			
	ORDER BY professor_no
	</select>
	
	<!-- 교수사진등록하기 -->
	<insert id="insertProfessorImg" parameterType="com.gd.lms.vo.ProfessorImg">
	
	INSERT INTO professor_img ( 
		 professor_no
		,filename
		,origin_filename
		,content_type
		,create_date
		,update_date)
	VALUES (
		 #{professorNo}
		,#{fileName}
		,#{originFileName}
		,#{contentType}
		,now()
		,now()
	)
	
	</insert>
	
	<!-- header부분 사진 null값 셀렉 -->
	<select id="selectProfessorImg" parameterType="int" resultType="map">
	SELECT
		 professor_no
		,content_type
		,filename
		,origin_filename
	FROM
		professor_img
	WHERE
		professor_no = #{professorNo}
	</select>
	
	<!-- 교수사진수정하기 -->
	<update id="updateProfessorImg" parameterType="com.gd.lms.vo.ProfessorImg">
	
		UPDATE 
				professor_img
		SET
				 professor_no=#{professorNo}
				,content_type=#{contentType}
				,filename=#{fileName}
				,origin_filename=#{originFileName}
				,update_date=now()
		WHERE
				professor_no = #{professorNo}
	</update>

</mapper>