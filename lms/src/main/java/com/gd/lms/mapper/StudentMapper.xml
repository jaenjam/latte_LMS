<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.StudentMapper">


	<!-- 학생로그인 -->
	<select id="loginstudent" resultType="com.gd.lms.vo.Student">
		select
			student_no studentNo
			, student_pass studentPass
			, major_no majorNo
			, student_name studentName
			, student_regi_no studentRegiNo
			, student_age studentAge
			, student_gender studentGender
			, student_telephone studentTelephone
			, student_email studentEmail
			, student_address studentAddress
			, student_detail_address studentDatailAddress
			, student_state studentState
			, student_top studentTop
			, student_active studentActive
			, create_date createDate
			, update_date updateDate
			, club_no clubNo
			, scholar_no scholarNo
		FROM
			student
		WHERE
			student_no = #{studentNo}
		AND
			student_pass = #{studentPass}
	</select>


	<!--  학생 회원가입 >>> 실제로는 -->
	<insert id="insertStudent" parameterType="com.gd.lms.vo.Student">
		INSERT INTO student
			(
				 student_no
				, student_pass
				, major_no
				, student_name
				, student_regi_no
				, student_age
				, student_gender
				, student_telephone
				, student_email
				, student_address
				, student_detail_address
				, create_date
				, update_date
			)
		VALUES
			(
				#{studentNo}
				, #{studentPass}
				, #{majorNo}
				, #{studentName}
				, #{studentRegiNo}
				, #{studentAge}
				, #{studentGender}
				, #{studentTelephone}
				, #{studentEmail}
				, #{studentAddress}
				, #{studentDetailAddress}
				, now()
				, now()
			)
	</insert>
	
	<!-- 학생목록 출력 -->
	<select id="selectStudentList" resultType="map">
	
	SELECT 
		s.student_no studentNo
		, s.student_pass studentPass
		, m.major_no majorNo
		, m.major_name majorName
		, s.student_name studentName
		, s.student_regi_no studentRegiNo
		, s.student_age studentAge
		, s.student_gender studentGender
		, s.student_telephone studentTelephone
		, s.student_email studentEmail
		, s.student_address studentAddress
		, s.student_detail_address studentDetailAddress
		, s.student_state studentState
		, s.student_top studentTop
		, s.student_active studentActive
		, s.create_date createDate
		, s.update_date updateDate
		, sh.scholar_name scholarName
			
	FROM 
		student s LEFT JOIN scholar sh
	ON 
		s.scholar_no = sh.scholar_no
		
	INNER JOIN major m
	
	ON 
		s.major_no = m.major_no
		
	</select>
	
	
	<!-- 학생정보 상세보기 비밀번호 입력전 -->
	<select id="selectStudentOne" parameterType="int" resultType="map">
	SELECT 
		s.student_no
		, s.student_pass
		, s.major_no
		, s.student_name
		, s.student_regi_no
		, s.student_age
		, s.student_gender
		, s.student_telephone
		, s.student_email
		, s.student_address
		, s.student_detail_address
		, s.scholar_no
		, s.create_date
		, s.update_date
		, sh.scholar_name
		, si.filename
	FROM 
		student s LEFT JOIN scholar sh
	ON 
		s.scholar_no = sh.scholar_no
	LEFT JOIN 
		student_img si
	ON 
		s.student_no = si.student_no
	WHERE 
		s.student_no=#{studentNo}	
	</select>
	
	<!-- 학생정보 상세보기 확인비밀번호 입력 후 -->
	<select id="selectStudentOneAfterPass" parameterType="com.gd.lms.vo.Student" resultType="map">
		SELECT 
		s.student_no
		, s.student_pass
		, s.major_no
		, s.student_name
		, s.student_regi_no
		, s.student_age
		, s.student_gender
		, s.student_telephone
		, s.student_email
		, s.student_address
		, s.student_detail_address
		, s.scholar_no
		, s.create_date
		, s.update_date
		, sh.scholar_name
		, si.filename
	FROM 
		student s LEFT JOIN scholar sh
	ON 
		s.scholar_no = sh.scholar_no
	LEFT JOIN 
		student_img si
	ON 
		s.student_no = si.student_no
	WHERE 
		s.student_no=#{studentNo}
	AND
		s.student_pass=#{studentPass}		
	</select>
	
	
	<!--  학생사진 등록하기  -->
	<insert id="insertStudentImg" parameterType="com.gd.lms.vo.StudentImg">
		INSERT INTO student_img ( 
			 student_no studentNo
			,filename filename
			,origin_filename originFilename
			,content_type contentType
			,create_date createDate
			,update_date updateDate)
		VALUES (
			 #{studentNo}
			,#{filename}
			,#{originFilename}
			,#{contentType}
			,now()
			,now()
		)
	</insert>
	
	
	<!--  학생정보 수정하기 -->
	<update id="updateStudentOnde" parameterType="com.gd.lms.vo.Student">
		UPDATE student
			SET
			 student_pass = #{studentPass}
			 , student_telephone= #{studentpTelephone}
			 , student_email = #{studentEmail}
			 , student_address = #{studentAddress}
			 , student_detail_address = #{studentDetailAddress}
			 , update_date = now()
			 WHERE
			 	student_no = #{studentNo};	
	
	</update>
</mapper>