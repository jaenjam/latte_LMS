<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.lms.mapper.AssessMapper">


	<!--  1.7하기 전에 reg -->


	<!--  수강신청 완료 이후 professor_assess 테이블에 해당 register_no로 디비 자동삽입 -->
	<insert id="insertProfessorA" parameterType="com.gd.lms.vo.ProfessorAssess">
	INSERT INTO 
		professor_assess 
		(
		register_no
		, subject_approve_no
		)
	VALUES 
		(
		#{registerNo}
		, #{subjectApproveNo}
		)	
	</insert>



	<!-- 수강신청 완료 이후 subject_assess 테이블에 해당 register_no로 디비 자동삽입 -->
	<insert id="insertSubjectA" parameterType="com.gd.lms.vo.SubjectAssess">
	INSERT INTO 
		subject_assess
		(
		register_no
		, subject_approve_no
		)
	VALUE
		(
		#{registerNo}
		, #{subjectApproveNo}
		)
	</insert>


	<!--  학번 기준으로 수강강의목록 긁어오기 -->
	<select id="selectAssessList" parameterType="int" resultType="map">
	SELECT
	distinct
		r.student_no
		, r.subject_approve_no subjectApproveNo
		, r.create_date createDate		
		, sa.professor_no professorNo
		, sa.year yearS
		, sa.semester semesterS
		, pa.professor_assess_no professorAssessNo
		, pa.register_no registerNo
		, pa.professor_assess_score professorAssessScore
		, pa.professor_assess_ck professorAssessCk
		, pa.professor_assess_ck professorAssessContent
		, sba.subject_assess_no subjectAssessNo
		, sba.register_no registerNo
		, sba.subject_assess_score subjectAssessScore
		, sba.subject_assess_ck subjectAssessCk
		, sba.subject_assess_content subjectAssessContent
		, pf.professor_name professorName
		, s.subject_name subjectName
		, s.subject_credit subjectCredit
	FROM
		register r
		LEFT JOIN
			subject_approve sa
				ON
				r.subject_approve_no = sa.subject_approve_no
					LEFT JOIN
						professor_assess pa
							ON
							r.register_no= pa.register_no 
							LEFT JOIN
								subject_assess sba
								ON
								r.register_no= sba.register_no
								LEFT JOIN
								professor pf
									ON
									sa.professor_no = pf.professor_no
									LEFT JOIN
										subject s
										ON
										sa.subject_no = s.subject_no
							
	WHERE
		student_no = #{No}					
	</select>
	
	
	<!--  버튼 누르고 수강강의 상세보기  -->
	<select id="selectAssessPfOne" parameterType="int" resultType="map">
	SELECT DISTINCT
			r.subject_approve_no subjectApproveNo
			, r.create_date createDate
			
			, sa.professor_no professorNo
			, sa.year yearS
			, sa.semester semesterS
			, pa.professor_assess_no professorAssessNo
			, pa.register_no registerNo
			, pa.professor_assess_score professorAssessScore
			, pa.professor_assess_ck professorAssessCk
			, pa.professor_assess_content professorAssessContent
			, pf.professor_name professorName
			, s.subject_name subjectName
			, s.subject_credit subjectCredit
	FROM
			register r
				RIGHT JOIN
				subject_approve sa 
					ON
					r.subject_approve_no = sa.subject_approve_no
							RIGHT JOIN
							professor_assess pa 
								ON
								r.register_no= pa.register_no
								RIGHT JOIN
								professor pf 
									ON
									sa.professor_no = pf.professor_no
									RIGHT JOIN
										subject s 
										ON
										sa.subject_no = s.subject_no
	WHERE
			pa.professor_assess_no= #{professorAssessNo}	
	</select>
	
	
	<!-- 별점기반 교수 평가 입력 -->
	<insert id="insertAssessPfOne" parameterType="com.gd.lms.vo.ProfessorAssess">
	INSERT INTO
	professor_assess
	(register_no
	, professor_assess_score
	, professor_assess_ck
	, professor_assess_content
	)
	VALUES
	(#{registerNo}
	, #{professorAssessScore}
	, #{professorAssessCk}
	, #{professorAssessContent})
	</insert>
	
	
	<!-- 별점기반 교수 평가 입력 업데이트 -->
	<update id="updateAssessPfOne" parameterType="com.gd.lms.vo.ProfessorAssess">
	UPDATE
		professor_assess
	SET
		
		 professor_assess_score = #{professorAssessScore}
		, professor_assess_content = #{professorAssessContent}
		, professor_assess_ck = #{professorAssessCk}
		
	WHERE
		professor_assess_no = #{professorAssessNo}
	</update>
	
	
	
	
	<!--  과목평가 관련 -->
	<select id="selectSubjectAssessList" parameterType="int" resultType="map">
	SELECT
	distinct
		r.student_no
		, r.subject_approve_no subjectApproveNo
		, r.create_date createDate
		, sa.professor_no professorNo
		, sa.year yearS
		, sa.semester semesterS
		, sba.subject_assess_no subjectAssessNo
		, sba.register_no registerNo
		, sba.subject_assess_score subjectAssessScore
		, sba.subject_assess_ck subjectAssessCk
		, sba.subject_assess_content subjectAssessContent
		, pf.professor_name professorName
		, s.subject_name subjectName
		, s.subject_credit subjectCredit
	FROM
		register r
		LEFT JOIN
			subject_approve sa
				ON
				r.subject_approve_no = sa.subject_approve_no
					LEFT JOIN
						subject_assess sba
							ON
							r.register_no= sba.register_no 
							LEFT JOIN
							professor pf
								ON
								sa.professor_no = pf.professor_no
								LEFT JOIN
									subject s
									ON
									sa.subject_no = s.subject_no
							
	WHERE
		student_no = #{No}
	</select>
	
	
	<!--  버튼 누르고 과목평가 상세보기  -->
	<select id="selectAssessSbOne" parameterType="int" resultType="map">
 	SELECT DISTINCT
			r.subject_approve_no subjectApproveNo
			, r.create_date createDate
			, sa.professor_no professorNo
			, sa.year yearS
			, sa.semester semesterS
			, sba.subject_assess_no subjectAssessNo
			, sba.register_no registerNo
			, sba.subject_assess_score subjectAssessScore
			, sba.subject_assess_ck subjectAssessCk
			, sba.subject_assess_content subjectAssessContent
			, pf.professor_name professorName
			, s.subject_name subjectName
			, s.subject_credit subjectCredit
	FROM
			register r
				RIGHT JOIN
				subject_approve sa 
					ON
					r.subject_approve_no = sa.subject_approve_no
							RIGHT JOIN
							subject_assess sba 
								ON
								r.register_no= sba.register_no
								RIGHT JOIN
								professor pf 
									ON
									sa.professor_no = pf.professor_no
									RIGHT JOIN
										subject s 
										ON
										sa.subject_no = s.subject_no
	WHERE
			sba.subject_assess_no=#{subjectAssessNo}
	</select>
	
	
	
	
	<!-- 별점기반 과목 평가 입력 -->
	<insert id="insertAssessSbOne" parameterType="com.gd.lms.vo.SubjectAssess">
	INSERT INTO
	subject_assess
	(register_no
	, professor_assess_score
	, professor_assess_content
	)
	VALUES
	(#{registerNo}
	, #{subjectAssessScore}
	, #{subjectAssessContent})
	</insert>


	<!--  별점기반 과목평가 입력 >>> 자동인서트라 이젠 업데이트임 -->
	<update id="updateAssessSbOne" parameterType="com.gd.lms.vo.SubjectAssess">
	UPDATE
		subject_assess
	SET
		subject_assess_score = #{subjectAsssessScore}
		, subject_assess_content = #{subjectAssessContent}
		, subject_assess_ck = #{subjectAssessCk}
		
	WHERE
		subject_assess_no = #{subjectAssessNo}
	</update>


</mapper>